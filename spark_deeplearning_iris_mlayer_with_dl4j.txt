import org.deeplearning4j.datasets.iterator.impl.IrisDataSetIterator
import org.deeplearning4j.eval.Evaluation
import org.deeplearning4j.nn.api.{Layer, OptimizationAlgorithm}
import org.deeplearning4j.nn.conf.{Updater, NeuralNetConfiguration}
import org.deeplearning4j.nn.conf.layers.{OutputLayer, DenseLayer}
import org.deeplearning4j.nn.multilayer.MultiLayerNetwork
import org.deeplearning4j.nn.weights.WeightInit
import org.nd4j.linalg.lossfunctions.LossFunctions

//val inputNum = 4
//var outputNum = 3
var numSamples = 150
var batchSize = 150
//var iterations = 10000
//var seed = 321
//var listenerFreq = iterations / 5
//val learningRate = 1e-6

println("Loading data....")
val iter = new IrisDataSetIterator(batchSize, numSamples)
val iris = iter.next()
iris.shuffle()
//iris.normalizeZeroMeanZeroUnitVariance()
val testAndTrain = iris.splitTestAndTrain(0.80)
val train = testAndTrain.getTrain
val test = testAndTrain.getTest

val numInputs = 4
val outputNum = 3
val iterations = 100

val multiLayerConfig = new NeuralNetConfiguration.Builder().
 seed(12345).
 iterations(iterations).
 optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).
 learningRate(1e-1).
 l1(0.01).
 regularization(true).l2(1e-3).
 list(3).
 layer(0, new DenseLayer.Builder().
   nIn(numInputs).nOut(20).
   activation("tanh").
   weightInit(WeightInit.XAVIER).
   build()).
 layer(1, new DenseLayer.Builder().nIn(20).nOut(50).
   activation("tanh").
   weightInit(WeightInit.XAVIER).
   build()).
 layer(2, new OutputLayer.Builder(LossFunctions.LossFunction.MCXENT).
   weightInit(WeightInit.XAVIER).
   activation("softmax").
   nIn(50).nOut(outputNum).build()).
 backprop(true).pretrain(false).
 build()

val model = new MultiLayerNetwork(multiLayerConfig)
model.init()
model.setUpdater(null)

val nEpochs = 5
(0 until nEpochs).foreach{i => 
  // Train the model
  model.fit(train)

  val eval = new Evaluation()
  val output = model.output(test.getFeatureMatrix,Layer.TrainingMode.TEST)

  eval.eval(test.getLabels, output)
  println("Statistics..."+eval.stats())
}
2021-01-04 17:42:21 WARN  Evaluation:89 - Creating confusion matrix based on classes passed in . Will assume the label distribution passed in is indicative of the overall dataset
Statistics...
Examples labeled as 0 classified by model as 0: 5 times
Examples labeled as 1 classified by model as 1: 10 times
Examples labeled as 2 classified by model as 1: 10 times
Examples labeled as 2 classified by model as 2: 5 times


==========================Scores========================================
 Accuracy:  0.6667
 Precision: 0.8333
 Recall:    0.7778
 F1 Score:  0.8046
========================================================================
2021-01-04 17:42:21 WARN  Evaluation:89 - Creating confusion matrix based on classes passed in . Will assume the label distribution passed in is indicative of the overall dataset
Statistics...
Examples labeled as 0 classified by model as 0: 5 times
Examples labeled as 1 classified by model as 1: 10 times
Examples labeled as 2 classified by model as 1: 7 times
Examples labeled as 2 classified by model as 2: 8 times


==========================Scores========================================
 Accuracy:  0.7667
 Precision: 0.8627
 Recall:    0.8444
 F1 Score:  0.8535
========================================================================
2021-01-04 17:42:22 WARN  Evaluation:89 - Creating confusion matrix based on classes passed in . Will assume the label distribution passed in is indicative of the overall dataset
Statistics...
Examples labeled as 0 classified by model as 0: 5 times
Examples labeled as 1 classified by model as 1: 10 times
Examples labeled as 2 classified by model as 1: 4 times
Examples labeled as 2 classified by model as 2: 11 times


==========================Scores========================================
 Accuracy:  0.8667
 Precision: 0.9048
 Recall:    0.9111
 F1 Score:  0.9079
========================================================================
2021-01-04 17:42:22 WARN  Evaluation:89 - Creating confusion matrix based on classes passed in . Will assume the label distribution passed in is indicative of the overall dataset
Statistics...
Examples labeled as 0 classified by model as 0: 5 times
Examples labeled as 1 classified by model as 1: 10 times
Examples labeled as 2 classified by model as 1: 3 times
Examples labeled as 2 classified by model as 2: 12 times


==========================Scores========================================
 Accuracy:  0.9
 Precision: 0.9231
 Recall:    0.9333
 F1 Score:  0.9282
========================================================================
2021-01-04 17:42:22 WARN  Evaluation:89 - Creating confusion matrix based on classes passed in . Will assume the label distribution passed in is indicative of the overall dataset
Statistics...
Examples labeled as 0 classified by model as 0: 5 times
Examples labeled as 1 classified by model as 1: 10 times
Examples labeled as 2 classified by model as 2: 15 times


==========================Scores========================================
 Accuracy:  1
 Precision: 1
 Recall:    1
 F1 Score:  1
========================================================================
